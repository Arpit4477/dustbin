<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dustbins and Sensor Data</title>
    <link rel="stylesheet" href="header.css">
    <link rel="stylesheet" href="style.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
        }
        h1 {
            text-align: center;
            margin-top: 20px;
        }
        #filter {
            width: 80%;
            margin: 20px auto;
            text-align: center;
        }
        select {
            padding: 5px;
            font-size: 16px;
            margin-bottom: 20px;
        }
        #download-btn {
            padding: 10px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 20px;
        }
        #download-btn:hover {
            background-color: #0056b3;
        }
        table {
            width: 80%;
            margin: 20px auto;
            border-collapse: collapse;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        button {
            padding: 5px 10px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <nav>
        <a href="/">Home</a>
        <% if (user.role === 'admin') { %>
            <a href="/admin">Admin</a>
            <a href="/register">Add User</a>
            <a href="/addSite">Add Site</a>
            <a href="/add">Add Dustbin</a>
        <% } %>
        <a href="/dustbin-data">Dustbin Data</a>
        <a href="/logout">Logout</a>
    </nav>
    <h1>Your Dustbins and Sensor Data</h1>

    <div id="filter">
        <label for="locationFilter">Filter by Location:</label>
        <select id="locationFilter" onchange="filterDustbinsByFilters()">
            <option value="all">All Locations</option>
        </select>
        <label for="deviceIdFilter">Filter by Device ID:</label>
        <select id="deviceIdFilter" onchange="filterDustbinsByFilters()">
            <option value="all">All Devices</option>
        </select>
    </div>

    <div id="download-container" style="text-align:center;">
        <button id="download-btn" onclick="downloadCSV()">Download CSV</button>
    </div>

    <table id="dustbinsTable">
        <thead>
            <tr>
                <th>Location ID</th>
                <th>Device ID</th>
                <th>Sensor 1</th>
                <th>Sensor 2</th>
                <th>Battery</th>
                <th>Voltage</th>
                <th>Last Updated</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <script>
        let dustbins = [];

        document.addEventListener('DOMContentLoaded', () => {
            fetchDustbinsAndSensors(); // Initial fetch
            setInterval(fetchDustbinsAndSensors, 10000); // Auto update every 10 seconds
        });

        async function fetchDustbinsAndSensors() {
            try {
                const response = await fetch('/api/dustbins');
                const newDustbins = await response.json();

                if (JSON.stringify(dustbins) !== JSON.stringify(newDustbins)) {
                    dustbins = newDustbins;
                    populateFilters();
                    filterDustbinsByFilters();
                }
            } catch (error) {
                console.error('Error fetching dustbins:', error);
            }
        }

        function populateFilters() {
            const locationFilter = document.getElementById('locationFilter');
            const deviceIdFilter = document.getElementById('deviceIdFilter');

            const uniqueLocations = [...new Set(dustbins.map(d => d.locationId))];
            const uniqueDeviceIds = [...new Set(dustbins.map(d => d.deviceId))];

            locationFilter.innerHTML = '<option value="all">All Locations</option>';
            deviceIdFilter.innerHTML = '<option value="all">All Devices</option>';

            uniqueLocations.forEach(loc => {
                locationFilter.innerHTML += `<option value="${loc}">${loc}</option>`;
            });

            uniqueDeviceIds.forEach(id => {
                deviceIdFilter.innerHTML += `<option value="${id}">${id}</option>`;
            });

            // Restore previous selections
            locationFilter.value = localStorage.getItem('selectedLocation') || 'all';
            deviceIdFilter.value = localStorage.getItem('selectedDeviceId') || 'all';
        }

        async function filterDustbinsByFilters() {
            const selectedLocation = document.getElementById('locationFilter').value;
            const selectedDeviceId = document.getElementById('deviceIdFilter').value;

            localStorage.setItem('selectedLocation', selectedLocation);
            localStorage.setItem('selectedDeviceId', selectedDeviceId);

            const tableBody = document.getElementById('dustbinsTable').getElementsByTagName('tbody')[0];
            tableBody.innerHTML = '';

            const filteredDustbins = dustbins.filter(d => 
                (selectedLocation === 'all' || d.locationId === selectedLocation) &&
                (selectedDeviceId === 'all' || d.deviceId === selectedDeviceId)
            );

            for (const dustbin of filteredDustbins) {
                const sensorResponse = await fetch(`/api/sensors/latest/${dustbin.deviceId}`);
                const sensor = await sensorResponse.json();

                const row = document.createElement('tr');

                row.innerHTML = `
                    <td>${dustbin.locationId}</td>
                    <td>${dustbin.deviceId}</td>
                    <td>${sensor.s1 || 'N/A'}</td>
                    <td>${sensor.s2 || 'N/A'}</td>
                    <td>${sensor.b || 'N/A'}</td>
                    <td>${sensor.v || 'N/A'}</td>
                    <td>${new Date(sensor.createdAt).toLocaleString()}</td>
                    <td><button onclick="deleteSensorData('${sensor._id}')">Delete</button></td>
                `;

                tableBody.appendChild(row);
            }
        }

        async function deleteSensorData(sensorId) {
            try {
                const response = await fetch(`/sensors/delete/${sensorId}`, { method: 'DELETE' });

                if (response.ok) {
                    fetchDustbinsAndSensors();
                } else {
                    alert('Failed to delete sensor data');
                }
            } catch (error) {
                console.error('Error deleting sensor data:', error);
            }
        }
    </script>
    <script src="loadheader.js"></script>
</body>
</html>
